version: '3.8'

services:
  # Flask应用服务
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pyreminder-web
    expose:
      - "8000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - TIMEZONE=Asia/Shanghai
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=5201314
      - REDIS_SSL=False
    env_file:
      - ./config/.env
    volumes:
      - ./:/app
      - ./logs/app:/app/logs
    networks:
      - pyreminder-network
    restart: always
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis数据库服务
  redis:
    image: redis:6-alpine
    container_name: pyreminder-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-pyreminder}
    expose:
      - "6379"
    volumes:
      - redis-data:/data
    networks:
      - pyreminder-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx代理服务
  nginx:
    image: nginx:1.21-alpine
    container_name: pyreminder-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
      - ./app/static:/app/static:ro
    depends_on:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - pyreminder-network

# 网络配置
networks:
  pyreminder-network:
    name: pyreminder-network

# 数据卷配置
volumes:
  redis-data:
    name: pyreminder-redis-data 